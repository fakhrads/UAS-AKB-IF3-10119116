// Generated by view binder compiler. Do not edit!
package com.fakhrads.uasakbif3101191116.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.fakhrads.uasakbif3101191116.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityEditBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final Button btnCencel;

  @NonNull
  public final Button btnSave;

  @NonNull
  public final EditText catText;

  @NonNull
  public final EditText etText;

  @NonNull
  public final LinearLayout linearLayout;

  @NonNull
  public final EditText titleText;

  private ActivityEditBinding(@NonNull LinearLayout rootView, @NonNull Button btnCencel,
      @NonNull Button btnSave, @NonNull EditText catText, @NonNull EditText etText,
      @NonNull LinearLayout linearLayout, @NonNull EditText titleText) {
    this.rootView = rootView;
    this.btnCencel = btnCencel;
    this.btnSave = btnSave;
    this.catText = catText;
    this.etText = etText;
    this.linearLayout = linearLayout;
    this.titleText = titleText;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityEditBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityEditBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_edit, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityEditBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnCencel;
      Button btnCencel = ViewBindings.findChildViewById(rootView, id);
      if (btnCencel == null) {
        break missingId;
      }

      id = R.id.btnSave;
      Button btnSave = ViewBindings.findChildViewById(rootView, id);
      if (btnSave == null) {
        break missingId;
      }

      id = R.id.catText;
      EditText catText = ViewBindings.findChildViewById(rootView, id);
      if (catText == null) {
        break missingId;
      }

      id = R.id.etText;
      EditText etText = ViewBindings.findChildViewById(rootView, id);
      if (etText == null) {
        break missingId;
      }

      id = R.id.linearLayout;
      LinearLayout linearLayout = ViewBindings.findChildViewById(rootView, id);
      if (linearLayout == null) {
        break missingId;
      }

      id = R.id.titleText;
      EditText titleText = ViewBindings.findChildViewById(rootView, id);
      if (titleText == null) {
        break missingId;
      }

      return new ActivityEditBinding((LinearLayout) rootView, btnCencel, btnSave, catText, etText,
          linearLayout, titleText);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
