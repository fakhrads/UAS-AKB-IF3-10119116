// Generated by view binder compiler. Do not edit!
package com.fakhrads.uasakbif3101191116.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.cardview.widget.CardView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.fakhrads.uasakbif3101191116.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutListItemBinding implements ViewBinding {
  @NonNull
  private final CardView rootView;

  @NonNull
  public final Button btnDelete;

  @NonNull
  public final Button btnEdit;

  @NonNull
  public final CardView cvNote;

  @NonNull
  public final TextView tvTitle;

  @NonNull
  public final TextView txtCat;

  @NonNull
  public final TextView txtDate;

  @NonNull
  public final TextView txtMemo;

  private LayoutListItemBinding(@NonNull CardView rootView, @NonNull Button btnDelete,
      @NonNull Button btnEdit, @NonNull CardView cvNote, @NonNull TextView tvTitle,
      @NonNull TextView txtCat, @NonNull TextView txtDate, @NonNull TextView txtMemo) {
    this.rootView = rootView;
    this.btnDelete = btnDelete;
    this.btnEdit = btnEdit;
    this.cvNote = cvNote;
    this.tvTitle = tvTitle;
    this.txtCat = txtCat;
    this.txtDate = txtDate;
    this.txtMemo = txtMemo;
  }

  @Override
  @NonNull
  public CardView getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutListItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutListItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_list_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutListItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnDelete;
      Button btnDelete = ViewBindings.findChildViewById(rootView, id);
      if (btnDelete == null) {
        break missingId;
      }

      id = R.id.btnEdit;
      Button btnEdit = ViewBindings.findChildViewById(rootView, id);
      if (btnEdit == null) {
        break missingId;
      }

      CardView cvNote = (CardView) rootView;

      id = R.id.tvTitle;
      TextView tvTitle = ViewBindings.findChildViewById(rootView, id);
      if (tvTitle == null) {
        break missingId;
      }

      id = R.id.txtCat;
      TextView txtCat = ViewBindings.findChildViewById(rootView, id);
      if (txtCat == null) {
        break missingId;
      }

      id = R.id.txtDate;
      TextView txtDate = ViewBindings.findChildViewById(rootView, id);
      if (txtDate == null) {
        break missingId;
      }

      id = R.id.txtMemo;
      TextView txtMemo = ViewBindings.findChildViewById(rootView, id);
      if (txtMemo == null) {
        break missingId;
      }

      return new LayoutListItemBinding((CardView) rootView, btnDelete, btnEdit, cvNote, tvTitle,
          txtCat, txtDate, txtMemo);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
